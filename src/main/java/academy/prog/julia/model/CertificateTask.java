package academy.prog.julia.model;

import jakarta.persistence.*;

/**
 * Represents a task related to certificate processing in the database.
 *
 * This class maps to the 'certificate_tasks' table and defines the structure of certificate task data.
 *
 * @Entity marks this class as a JPA entity to be managed by Hibernate
 */
@Entity
@Table(name = "certificate_tasks")
public class CertificateTask {

    /**
     * Unique identifier for the certificate task.
     *
     * This field is auto-generated by the database.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id")
    private Long id;

    /**
     * ID of the user associated with this certificate task.
     */
    @Column(name = "user_id")
    private Long userId;

    /**
     * Name of the group associated with this certificate task.
     */
    @Column(name = "group_name")
    private String groupName;

    /**
     * Flag indicating whether the certificate has been generated.
     */
    @Column(name = "is_generated")
    private boolean isGenerated;

    /**
     * Flag indicating whether the certificate has been sent.
     */
    @Column(name = "is_send")
    private boolean isSend;

    /**
     * Error message if there was an issue sending the certificate.
     */
    @Column(name = "send_error")
    private String sendError;

    /**
     * Default constructor required by JPA.
     *
     * Initializes a new instance of the CertificateTask class.
     */
    public CertificateTask() {}

    /**
     * Constructor for creating a CertificateTask with specified details.
     *
     * @param userId The ID of the user associated with the certificate task
     * @param groupName The name of the group associated with the certificate task
     * @param isGenerated Flag indicating whether the certificate has been generated
     * @param isSend Flag indicating whether the certificate has been sent
     * @param sendError Error message if there was an issue sending the certificate
     */
    public CertificateTask(
            Long userId,
            String groupName,
            boolean isGenerated,
            boolean isSend,
            String sendError
    ) {
        this.userId = userId;
        this.groupName = groupName;
        this.isGenerated = isGenerated;
        this.isSend = isSend;
        this.sendError = sendError;
    }

    /**
     * Gets the unique identifier of the certificate task.
     *
     * @return The unique identifier of the certificate task
     */
    public Long getId() {
        return id;
    }

    /**
     * Sets the unique identifier of the certificate task.
     *
     * @param id The unique identifier to set
     */
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Gets the ID of the user associated with this certificate task.
     *
     * @return The ID of the user associated with this task
     */
    public Long getUserId() {
        return userId;
    }

    /**
     * Sets the ID of the user associated with this certificate task.
     *
     * @param userId The ID of the user to set
     */
    public void setUserId(Long userId) {
        this.userId = userId;
    }

    /**
     * Gets the name of the group associated with this certificate task.
     *
     * @return The name of the group associated with this task
     */
    public String getGroupName() {
        return groupName;
    }

    /**
     * Sets the name of the group associated with this certificate task.
     *
     * @param groupName The name of the group to set
     */
    public void setGroupName(String groupName) {
        this.groupName = groupName;
    }

    /**
     * Checks if the certificate has been generated.
     *
     * @return True if the certificate has been generated, otherwise false
     */
    public boolean isGenerated() {
        return isGenerated;
    }

    /**
     * Sets the flag indicating whether the certificate has been generated.
     *
     * @param generated The flag value to set
     */
    public void setGenerated(boolean generated) {
        isGenerated = generated;
    }

    /**
     * Checks if the certificate has been sent.
     *
     * @return True if the certificate has been sent, otherwise false
     */
    public boolean isSend() {
        return isSend;
    }

    /**
     * Sets the flag indicating whether the certificate has been sent.
     *
     * @param send The flag value to set
     */
    public void setSend(boolean send) {
        this.isSend = send;
    }

    /**
     * Gets the error message related to sending the certificate.
     *
     * @return The error message if there was an issue sending the certificate
     */
    public String getSendError() {
        return sendError;
    }

    /**
     * Sets the error message related to sending the certificate.
     *
     * @param sendError The error message to set
     */
    public void setSendError(String sendError) {
        this.sendError = sendError;
    }

}